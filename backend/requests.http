### Configuración base
@baseUrl = http://localhost:5000
@contentType = application/json

###############################################
# DEPARTAMENTOS - CRUD COMPLETO
###############################################

### 1. DEPARTAMENTOS - GET todos los departamentos
GET {{baseUrl}}/api/departments
Content-Type: {{contentType}}

### 2. DEPARTAMENTOS - GET con paginación
GET {{baseUrl}}/api/departments?skip=0&limit=10
Content-Type: {{contentType}}

### 3. DEPARTAMENTOS - GET un departamento específico
GET {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

### 4. DEPARTAMENTOS - POST crear nuevo departamento
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "nombre": "Recursos Humanos",
  "descripcion": "Departamento encargado de gestión de personal"
}

### 5. DEPARTAMENTOS - POST crear otro departamento
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "nombre": "Tecnología",
  "descripcion": "Departamento de desarrollo e infraestructura"
}

### 6. DEPARTAMENTOS - POST crear más departamentos
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "nombre": "Ventas",
  "descripcion": "Equipo comercial y de ventas"
}

### 7. DEPARTAMENTOS - POST validación (FALLA - nombre vacío)
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "nombre": "",
  "descripcion": "Este fallaría porque el nombre está vacío"
}

### 8. DEPARTAMENTOS - POST validación (FALLA - sin nombre)
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "descripcion": "Falta el campo nombre requerido"
}

### 9. DEPARTAMENTOS - PUT actualizar departamento
PUT {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

{
  "nombre": "Recursos Humanos - Actualizado",
  "descripcion": "Departamento de RH y nómina"
}

### 10. DEPARTAMENTOS - PUT actualizar solo descripción
PUT {{baseUrl}}/api/departments/2
Content-Type: {{contentType}}

{
  "nombre": "Tecnología",
  "descripcion": "Infraestructura, desarrollo y soporte técnico"
}

### 11. DEPARTAMENTOS - PUT validación (FALLA - nombre vacío)
PUT {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

{
  "nombre": "",
  "descripcion": "Esto falla porque nombre no puede estar vacío"
}

### 12. DEPARTAMENTOS - DELETE eliminar departamento
DELETE {{baseUrl}}/api/departments/3
Content-Type: {{contentType}}

### 13. DEPARTAMENTOS - DELETE departamento que no existe (FALLA - 404)
DELETE {{baseUrl}}/api/departments/999
Content-Type: {{contentType}}


###############################################
# POSICIONES - CRUD COMPLETO
###############################################

### 14. POSICIONES - GET todas las posiciones
GET {{baseUrl}}/api/positions
Content-Type: {{contentType}}

### 15. POSICIONES - GET con paginación
GET {{baseUrl}}/api/positions?skip=0&limit=5
Content-Type: {{contentType}}

### 16. POSICIONES - GET una posición específica
GET {{baseUrl}}/api/positions/1
Content-Type: {{contentType}}

### 17. POSICIONES - POST crear nueva posición
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "Desarrollador Backend",
  "descripcion": "Desarrollador especializado en backend con Python",
  "salario_min": 2500,
  "salario_max": 4000
}

### 18. POSICIONES - POST crear otra posición
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "Gerente de Proyecto",
  "descripcion": "Responsable de la gestión y coordinación de proyectos",
  "salario_min": 3500,
  "salario_max": 5500
}

### 19. POSICIONES - POST crear más posiciones
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "Especialista en RH",
  "descripcion": "Encargado de reclutamiento y gestión de personal",
  "salario_min": 2000,
  "salario_max": 3500
}

### 20. POSICIONES - POST sin salarios (son opcionales)
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "Vendedor",
  "descripcion": "Representante comercial"
}

### 21. POSICIONES - POST validación (FALLA - título vacío)
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "",
  "descripcion": "Esto falla porque el título está vacío"
}

### 22. POSICIONES - POST validación (FALLA - sin título)
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "descripcion": "Falta el campo titulo requerido"
}

### 23. POSICIONES - PUT actualizar posición
PUT {{baseUrl}}/api/positions/1
Content-Type: {{contentType}}

{
  "titulo": "Desarrollador Backend Senior",
  "descripcion": "Desarrollador senior con 5+ años de experiencia",
  "salario_min": 3500,
  "salario_max": 5500
}

### 24. POSICIONES - PUT actualizar salarios
PUT {{baseUrl}}/api/positions/2
Content-Type: {{contentType}}

{
  "titulo": "Gerente de Proyecto",
  "descripcion": "Gestor senior de proyectos complejos",
  "salario_min": 4000,
  "salario_max": 6500
}

###  Posiciones - PUT actualizar salario de ventas

PUT {{baseUrl}}/api/positions/4
Content-Type: {{contentType}}

{
  "titulo": "Vendedor",
  "descripcion": "Representante comercial con experiencia",
  "salario_min": 2200,
  "salario_max": 4000
}

### 25. POSICIONES - PUT validación (FALLA - título vacío)
PUT {{baseUrl}}/api/positions/1
Content-Type: {{contentType}}

{
  "titulo": "",
  "descripcion": "Esto falla porque titulo no puede estar vacío"
}

### 26. POSICIONES - DELETE eliminar posición
DELETE {{baseUrl}}/api/positions/4
Content-Type: {{contentType}}

### 27. POSICIONES - DELETE posición que no existe (FALLA - 404)
DELETE {{baseUrl}}/api/positions/999
Content-Type: {{contentType}}


###############################################
# FLUJO COMPLETO DE PRUEBA
###############################################

### PASO 1: Crear departamento de Ventas
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "nombre": "Ventas",
  "descripcion": "Equipo comercial"
}

### PASO 2: Obtener todos los departamentos para verificar
GET {{baseUrl}}/api/departments
Content-Type: {{contentType}}

### PASO 3: Crear posición de vendedor
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "titulo": "Vendedor Senior",
  "descripcion": "Vendedor con experiencia",
  "salario_min": 2500,
  "salario_max": 4500
}

### PASO 4: Obtener todas las posiciones para verificar
GET {{baseUrl}}/api/positions
Content-Type: {{contentType}}

### PASO 5: Actualizar departamento de Ventas
PUT {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

{
  "nombre": "Ventas y Marketing",
  "descripcion": "Equipo comercial y marketing"
}

### PASO 6: Verificar el departamento actualizado
GET {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

### PASO 7: Actualizar posición de vendedor
PUT {{baseUrl}}/api/positions/1
Content-Type: {{contentType}}

{
  "titulo": "Ejecutivo de Ventas",
  "descripcion": "Ejecutivo comercial con experiencia",
  "salario_min": 3000,
  "salario_max": 5000
}

### PASO 8: Verificar posición actualizada
GET {{baseUrl}}/api/positions/1
Content-Type: {{contentType}}


###############################################
# CASOS DE ERROR Y VALIDACIÓN
###############################################

### ERROR 404 - Departamento no encontrado (GET)
GET {{baseUrl}}/api/departments/9999
Content-Type: {{contentType}}

### ERROR 404 - Posición no encontrada (GET)
GET {{baseUrl}}/api/positions/9999
Content-Type: {{contentType}}

### ERROR 400 - Validación fallida (POST Departamento)
POST {{baseUrl}}/api/departments
Content-Type: {{contentType}}

{
  "descripcion": "Solo descripción sin nombre"
}

### ERROR 400 - Validación fallida (POST Posición)
POST {{baseUrl}}/api/positions
Content-Type: {{contentType}}

{
  "descripcion": "Solo descripción sin titulo"
}

### ERROR 400 - Validación fallida (PUT Departamento)
PUT {{baseUrl}}/api/departments/1
Content-Type: {{contentType}}

{
  "nombre": ""
}

### ERROR 404 - Actualizar departamento no existente
PUT {{baseUrl}}/api/departments/9999
Content-Type: {{contentType}}

{
  "nombre": "Nombre",
  "descripcion": "Descripción"
}

### ERROR 404 - Actualizar posición no existente
PUT {{baseUrl}}/api/positions/9999
Content-Type: {{contentType}}

{
  "titulo": "Título",
  "descripcion": "Descripción"
}

###############################################
# EMPLEADOS - CRUD COMPLETO
###############################################

### E1. EMPLEADOS - GET todos los empleados
GET {{baseUrl}}/api/employees
Content-Type: {{contentType}}

### E2. EMPLEADOS - GET con paginación
GET {{baseUrl}}/api/employees?skip=0&limit=10
Content-Type: {{contentType}}

### E3. EMPLEADOS - GET un empleado específico
GET {{baseUrl}}/api/employees/1
Content-Type: {{contentType}}

### E4. EMPLEADOS - POST crear nuevo empleado (válido)
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "EMP001",
  "nombre": "Ana",
  "apellido": "González",
  "email": "ana.gonzalez@example.com",
  "telefono": "+541112345678",
  "fecha_nacimiento": "1990-03-15",
  "fecha_contratacion": "2025-03-01",
  "salario": 3200.50,
  "activo": true,
  "departamento_id": 1,
  "posicion_id": 1
}

### E5. EMPLEADOS - POST crear otro empleado
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "EMP002",
  "nombre": "Luis",
  "apellido": "Martínez",
  "email": "luis.martinez@example.com",
  "fecha_contratacion": "2025-04-15",
  "salario": 2800,
  "departamento_id": 2,
  "posicion_id": 2
}

### E6. EMPLEADOS - POST validación (FALLA - falta email)
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "EMP003",
  "nombre": "Carla",
  "apellido": "Pérez",
  "fecha_contratacion": "2025-06-01",
  "salario": 2100,
  "departamento_id": 1,
  "posicion_id": 3
}

### E7. EMPLEADOS - POST validación (FALLA - email inválido)
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "EMP004",
  "nombre": "Pedro",
  "apellido": "López",
  "email": "no-es-email",
  "fecha_contratacion": "2025-01-10",
  "salario": 2000,
  "departamento_id": 1,
  "posicion_id": 1
}

### E8. EMPLEADOS - POST validación (FALLA - salario negativo)
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "EMP005",
  "nombre": "Marta",
  "apellido": "Ruiz",
  "email": "marta.ruiz@example.com",
  "fecha_contratacion": "2025-02-20",
  "salario": -500,
  "departamento_id": 1,
  "posicion_id": 1
}

### E9. EMPLEADOS - PUT actualizar empleado
PUT {{baseUrl}}/api/employees/1
Content-Type: {{contentType}}

{
  "nombre": "Ana María",
  "apellido": "González",
  "email": "ana.m.gonzalez@example.com",
  "telefono": "+541198765432",
  "salario": 3500.75,
  "departamento_id": 1,
  "posicion_id": 1
}

### E10. EMPLEADOS - PUT validación (FALLA - nombre vacío)
PUT {{baseUrl}}/api/employees/1
Content-Type: {{contentType}}

{
  "nombre": "",
  "apellido": "González"
}

### E11. EMPLEADOS - DELETE eliminar empleado
DELETE {{baseUrl}}/api/employees/2
Content-Type: {{contentType}}

### E12. EMPLEADOS - DELETE empleado que no existe (FALLA - 404)
DELETE {{baseUrl}}/api/employees/9999
Content-Type: {{contentType}}


###############################################
# FLUJO DE PRUEBA EMPLEADOS
###############################################

### FLOW-E1: Crear empleado de prueba
POST {{baseUrl}}/api/employees
Content-Type: {{contentType}}

{
  "codigo_empleado": "FLOW001",
  "nombre": "Prueba",
  "apellido": "Usuario",
  "email": "prueba.usuario@example.com",
  "fecha_contratacion": "2025-07-01",
  "salario": 1500,
  "departamento_id": 3,
  "posicion_id": 4
}

### FLOW-E2: Obtener lista para verificar creación
GET {{baseUrl}}/api/employees
Content-Type: {{contentType}}

### FLOW-E3: Actualizar empleado de prueba
PUT {{baseUrl}}/api/employees/3
Content-Type: {{contentType}}

{
  "nombre": "Prueba Mod",
  "salario": 1700
}

### FLOW-E4: Obtener empleado actualizado
GET {{baseUrl}}/api/employees/3
Content-Type: {{contentType}}